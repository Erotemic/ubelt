env:
    global:
       # TRAVIS_USERNAME
       - secure: "BA0If6r1mpmCSBNk00cxn+ek0NT6NDIcxznz3H7+EPpYJ1Rjmj4bMRz9UZdALu4oRRYZNmRAO0/rzjd4SbtcJNACQzYUWljRq3TwTXh8edLXYo8o1gFnTCWqDM4DImuVpwVR1Qy5OvTOFjzZuLwXShcvxHyAX1lkJ5jEm0+NO7QDwbLIxBTkO4orFK1PZarNtHQTbZZbnPbT8slNiUHnJW1mKapoljIuP1TfmIzIOzHrCVzWcfBM3BFujYnJjgqo7S00mvwrLJD9ZuFJubZDQO6Op7/AHCTEpNyM0Ub4vPfa1jihC7jlwp7g7IsG1v6rDs4cgOdIJL4eaFA6hRYXtpz7L9BtAk/NYZ8qhkk8DKrQBiwPEolCzhTKOTJ1Jqs49ybX/oxXYvD2n4ioZ8Q1UUiQmeiwwXly3/Q1a3JwA5OwxXmgSfedj5ekuPu+vwVQFA8RX/KU+/l+tUTCy2TtBtmjWP5YISQMrbwQr7lF7fNLMvTy3Zba+SzU2N/Cu4eIpmsAAmy25rtsjmE3mrVW9y8/8W1r+59Y6YzgdxNTsK7vkBwMn35GUyamLDPea2j/0LxltNPmvX+zKcNo+5HHayp9Vzq41RnUjWIGAd/WWRmY5R3/nFG4tPWqIZVbgFfY9JjZ+3+cJ8jrJQLAruHTS05Hw+ISUSugzRzUV7yLyMs="

        
       # TRAVIS_PASSWORD
       - secure: "elDB0gJZgZfHgnWrgoai+HzznMFT3Qj8o2zhfdaAt52fpEYyQY9zoIdcvQVkmOQNaGHvSwzqFQD/WRZamjqhbrUMSJ8RyZtCMNCMz5a7rEVHXZxtgablKHuCRXQCZzW0SOLkpESHbvi8sq0fycF6it7F6/IKoX9nBcFtd6el1vzL6XoVNRhEAA2JYWYXzT6hrthq8r/z7xjlsZf/q95GdsYm9327fEynF/UfQ2jzqEncS9T8WkjZih1k2HxHdQhgVvc4kvlaRzMPQbEyk0+z+QpCN9Dp/38RimQFXSxZ5cX3gP6wMz8miy8X0mqtSnkqPFwU0f3PTtUU0vcdI7IirsJOdsp0WbWYQAYxLaVnMTXESk18HgkACSy3DvPw8nbXTIP5MViZ95dm0+jun4NgLJKH2k7euwp1CVLEHAWiUN/GuuQFotx3h1nZits2RM+/Am21r0iLnyiy3SJbcYetHNoG7mm+BXZSqRASepEIGQEo0LrIluEZDeZ+K2hWXIyWFI3zEplX//rJNI4NmogZrVpd9rUDMePv/AG56jGAEMH31Ne0xnSMqMAk7iULblSjwFyYlm4JSKOIqt2BiA0LfHxSiB3SqocPQIWHgx/EEIWRw+5vMSXagy+VrEMVgQ9+spc6Wt6o+MKSe+5yRsPnEoZ6tLz20zWN/CPuSR9sS4w="


       # TRAVIS_SECRET
       - secure: "zaMEXAbhGdq7H+Tj3Hj73G/mJC9d1cPNH382bRu/uWBOrJjprQGnWN9MTB6tVZYz/pzCaNepK5SWYi5NF+ujvdQRF36ndncDxWQRZ6sDEZwmICILBx+XjJy6Ee608k/j1BSCAVWZ7uYtLLRSj2hdyFuZxWc7kXtVhiZG0zU2FiyA9B32kLyY8eZACncVUGT18Toy5qfTSrGTej3Q5L4qPFP5YokP357J45dyd1pIB5zEJc5CHfrfp0coV3DuZEGHUBhtMk3DqbhUJbx5e/NSdHGLtvY5hJmsIHSJiUYG+1GZhE9b1tQTZcy42EFcBiRNRHb8Y8unwPK/qLo1lRaKN4D8as0qfjV00XlRIt4+zui8xJa2Wc21s1uW3lTCPx1C1wKmwiUEIAhon4OpKoOXvIfoVaDkn1X6bFdy2m8jhz3aFO3d/UNpUMKWcZgdTxKQ1VUC9hDh7tXfDuejbiFPA21G/+B4ZAdAOOIMcUv5kaeDTrRXrs4ZemrlO2imCnWK/ijo09TdscVh45Vsy84i6+clEgn3di/P+wHHxPeg59llMPglLyBb5aqWKFqwBI0uA82Y5ZfM4RaC4D0Egoe/Lf1RW93rV7K05QanCJiA/X/6YbM0ihyrkQYZDhpqW0JyEYKfdq76zm24XOL99CjBMDC0qh3qDCgg/LhnMkV9y4U="
  

language: python
sudo: false

cache:
  apt: true
  directories:
  - $HOME/.cache/pip
  - $HOME/download

python:
  - "2.7"
  - "3.5"
  - "3.6"
  #- "3.7"
  #
before_install:
  - pip install pip -U
  - pip install -r requirements.txt -U

install:
  - travis_retry pip install -e .
    
script: 
  - travis_wait ./run_tests.py --network

after_success: 
    - codecov 
    - gpg --version
    - gpg2 --version
    - export GPG_EXECUTABLE=gpg2
    - openssl version
    - | 
        __heredoc__='''
        # Load or generate secrets
        source $(secret_loader.sh)
        echo $TRAVIS_SECRET

        # encrypt relevant travis variables
        travis encrypt TRAVIS_SECRET=$TRAVIS_SECRET
        travis encrypt TWINE_PASSWORD=$TWINE_PASSWORD  
        travis encrypt TWINE_USERNAME=$TWINE_USERNAME 

        # HOW TO ENCRYPT YOUR SECRET GPG KEY
        IDENTIFIER="travis-ci-Erotemic"
        KEYID=$(gpg --list-keys --keyid-format LONG "$IDENTIFIER" | head -n 2 | tail -n 1 | awk '{print $1}' | tail -c 9)
        echo "KEYID = $KEYID"

        # Export plaintext gpg public keys, private keys, and trust info
        mkdir -p dev
        gpg --armor --export-secret-keys $KEYID > dev/travis_secret_gpg_key.pgp
        gpg --armor --export $KEYID > dev/travis_public_gpg_key.pgp
        gpg --export-ownertrust > dev/gpg_owner_trust

        # Encrypt gpg keys and trust with travis secret
        TSP=$TRAVIS_SECRET openssl enc -aes-256-cbc -md MD5 -pass env:TSP -e -a -in dev/travis_public_gpg_key.pgp > dev/travis_public_gpg_key.pgp.enc
        TSP=$TRAVIS_SECRET openssl enc -aes-256-cbc -md MD5 -pass env:TSP -e -a -in dev/travis_secret_gpg_key.pgp > dev/travis_secret_gpg_key.pgp.enc
        TSP=$TRAVIS_SECRET openssl enc -aes-256-cbc -md MD5 -pass env:TSP -e -a -in dev/gpg_owner_trust > dev/gpg_owner_trust.enc

        source $(secret_unloader.sh)

        # Look at what we did, clean up, and add it to git
        ls dev/*.enc
        rm dev/gpg_owner_trust dev/*.pgp
        git status
        git add dev/*.enc

        '''  # <hack vim "regex" parser> '
    # Decrypt and import GPG Keys / trust
    - $GPG_EXECUTABLE --version
    - openssl version
    - $GPG_EXECUTABLE --list-keys
    - TSP=$TRAVIS_SECRET openssl enc -aes-256-cbc -md MD5 -pass env:TSP -d -a -in dev/travis_public_gpg_key.pgp.enc | $GPG_EXECUTABLE --import 
    - TSP=$TRAVIS_SECRET openssl enc -aes-256-cbc -md MD5 -pass env:TSP -d -a -in dev/travis_secret_gpg_key.pgp.enc | $GPG_EXECUTABLE --import 
    - TSP=$TRAVIS_SECRET openssl enc -aes-256-cbc -md MD5 -pass env:TSP -d -a -in dev/gpg_owner_trust.enc | $GPG_EXECUTABLE --import-ownertrust
    - $GPG_EXECUTABLE --list-keys
    - |
        pip install twine
        if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
          pip install six pyopenssl ndg-httpsclient pyasn1 -U --user
          pip install requests[security] twine --user
        elfi
        if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
          pip install six twine
          pip install --upgrade pyOpenSSL
        fi
    # Package and publish to pypi (if on release)
    - |
        echo "TRAVIS_BRANCH = $TRAVIS_BRANCH"
        if [[ "$TRAVIS_BRANCH" == "release" ]]; then
            # use set +x to log all intermediate commands 
            set +x
            export CURRENT_BRANCH=$TRAVIS_BRANCH
            # TODO: reliable and secure gpg keys
            # Relies on a specific environmenmt being available 
            GPG_KEYID=D297D757 TWINE_PASSWORD=$TWINE_PASSWORD TWINE_USERNAME=$TWINE_USERNAME GPG_EXECUTABLE=$GPG_EXECUTABLE USE_GPG=True DEPLOY_BRANCH=release TAG_AND_UPLOAD=yes ./publish.sh
            set -x
        else
            GPG_KEYID=D297D757 TWINE_PASSWORD=$TWINE_PASSWORD TWINE_USERNAME=$TWINE_USERNAME GPG_EXECUTABLE=$GPG_EXECUTABLE USE_GPG=True DEPLOY_BRANCH=release TAG_AND_UPLOAD=no ./publish.sh
        fi

cache: 
    apt: true
    directories:
        - $HOME/.pip-cache
